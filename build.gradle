group = "io.github.robhinds"
version = "0.0.1"

task wrapper(type: Wrapper) {
    gradleVersion = "3.5"
}

ext {
    scalaPrefix = '2.11'
    awsVersion = '1.1.0'
    circeVersion = '0.8.0'
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
		    url "https://plugins.gradle.org/m2/"
		}
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath "gradle.plugin.com.github.maiflai:gradle-scalatest:0.15"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.0"
    }
}

repositories {
    mavenCentral()
    jcenter()
}

apply {
    plugin "scala"
    plugin "com.github.maiflai.scalatest"
    plugin "com.github.johnrengelman.shadow"
    plugin "com.jfrog.bintray"
    plugin "maven-publish"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    compile "org.scala-lang:scala-library:$scalaPrefix.8"
    compile "io.circe:circe-core_$scalaPrefix:$circeVersion"
    compile "io.circe:circe-generic_$scalaPrefix:$circeVersion"
    compile "io.circe:circe-parser_$scalaPrefix:$circeVersion"
    compile "ch.qos.logback:logback-classic:1.1.2"
    compile "com.typesafe.scala-logging:scala-logging_$scalaPrefix:3.4.0"
    compile "com.typesafe:config:1.3.2"
	
	shadow "com.amazonaws:aws-lambda-java-core:$awsVersion"
    shadow "com.amazonaws:aws-lambda-java-events:$awsVersion"

    testCompile "com.amazonaws:aws-lambda-java-core:$awsVersion"
    testCompile "com.amazonaws:aws-lambda-java-events:$awsVersion"
	testCompile "org.scalatest:scalatest_$scalaPrefix:3.0.0"
	testRuntime "org.pegdown:pegdown:1.6.0"
}

configurations {
    runtime.exclude module: 'storm-core'
}
